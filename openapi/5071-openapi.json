{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/generate-filename": {
      "get": {
        "summary": "Generate Filename Route",
        "operationId": "generate_filename_route_generate_filename_get",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context to create filename",
              "title": "Context"
            },
            "description": "Context to create filename"
          },
          {
            "name": "api_key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "API key for OpenAI model",
              "title": "Api Key"
            },
            "description": "API key for OpenAI model"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Generate Filename Route Generate Filename Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-response": {
      "post": {
        "summary": "Generate Response Route",
        "operationId": "generate_response_route_generate_response_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_generate_response_route_generate_response_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/get-head-oid": {
      "get": {
        "summary": "Get Head Oid",
        "operationId": "get_head_oid_get_head_oid_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_generate_response_route_generate_response_post": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt to search for"
          },
          "project": {
            "type": "string",
            "title": "Project",
            "description": "The project to search"
          },
          "mode": {
            "type": "string",
            "title": "Mode",
            "description": "Search mode: chat, commit, or super"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The embedding model used"
          },
          "match_strength": {
            "type": "string",
            "title": "Match Strength",
            "description": "The strength of the match"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key",
            "description": "API key for OpenAI model"
          },
          "codehost_api_key": {
            "anyOf": [
              {
                "type": "string",
                "format": "password",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Codehost Api Key",
            "description": "Code host API key for authentication"
          },
          "codehost_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Codehost Url",
            "description": "Code host URL for the repository"
          },
          "ignore_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ignore Files",
            "description": "List of file paths to ignore"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "project",
          "mode",
          "model",
          "match_strength",
          "api_key",
          "codehost_api_key",
          "codehost_url",
          "ignore_files"
        ],
        "title": "Body_generate_response_route_generate_response_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
